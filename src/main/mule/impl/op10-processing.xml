<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:smb="http://www.mulesoft.org/schema/mule/smb"
	xmlns:avio-logger="http://www.mulesoft.org/schema/mule/avio-logger"
	xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:cloudhub="http://www.mulesoft.org/schema/mule/cloudhub"
	xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/cloudhub http://www.mulesoft.org/schema/mule/cloudhub/current/mule-cloudhub.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/avio-logger http://www.mulesoft.org/schema/mule/avio-logger/current/mule-avio-logger.xsd
http://www.mulesoft.org/schema/mule/smb http://www.mulesoft.org/schema/mule/smb/current/mule-smb.xsd">
	<flow name="op10-processing-impl" doc:id="898dd829-1f03-47c5-a388-fd8c93ebef48">
		<avio-logger:log doc:name="START" doc:id="1205e2a4-0dec-4cd4-bdfb-6fe8ba952551" config-ref="avioCoreConfig" message="Start of op10 file creation" />
		<set-variable value='#[now() as String {format: "y-MM-dd-hhms"}]' doc:name="startTime of processing" doc:id="b94427b8-ea72-48fb-8cd6-be7586f070a7" variableName="startTime"/>
		<flow-ref doc:name="set-dates" doc:id="c3576891-a3bd-4396-87c6-458a3e86677a" name="set-dates" />
		<flow-ref doc:name="extract-and-sort-tables" doc:id="a5d8667e-bbb0-4016-afa6-0050c19143ca" name="extract-and-sort-tables" />
		<flow-ref doc:name="extract-min-max-avg-records" doc:id="e4dafe46-4730-4d55-9866-c1289bfce681" name="extract-min-max-avg-records" />
		<flow-ref doc:name="extract-total-records" doc:id="3127d1f7-8a6e-4773-885e-0f048de61598" name="extract-total-records" />
		<ee:transform doc:name="Total of records/errors" doc:id="88203070-96e7-4b94-8c41-31c4edbc1365" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="recordsTotal" ><![CDATA[%dw 2.0
output application/json
---
sizeOf(vars.minMaxAvgRecordsOutputFile) as Number + sizeOf(vars.totalRecordsOutputFile) as Number]]></ee:set-variable>
				<ee:set-variable variableName="errorsTotal" ><![CDATA[%dw 2.0
output application/json
---
sizeOf(vars.minMaxAvgErrorResponse) as Number + sizeOf(vars.totalRecordsErrorResponse) as Number]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<flow-ref doc:name="op10-file-format" doc:id="b7919153-782d-4cbf-8d03-3cae3b844691" name="op10-file-format" />
		<flow-ref doc:name="smb-connections" doc:id="821172ec-8305-42b7-86a0-56fe57c083f8" name="smb-connections" />
		<flow-ref doc:name="op10-error-list" doc:id="157e2b07-7524-4779-b911-9bde05977ed2" name="op10-error-list" />
		<set-variable value='#[now() as String {format: "y-MM-dd-hhms"}]' doc:name="endTime of processing" doc:id="6ce9781c-b20d-472d-88cd-e98e7f890498" variableName="endTime"/>
		<flow-ref doc:name="errors-report" doc:id="dbdfb616-ecf4-4e9f-9afc-36881300a05c" name="errors-report-sending"/>
		<avio-logger:log doc:name="END" doc:id="44b4cbc9-e283-4fd4-bc01-fed212ebf0a5" config-ref="avioCoreConfig" message="End of op10 file creation" />
		<error-handler ref="globalErrorHandler" />
	
</flow>
	<sub-flow name="set-dates" doc:id="f2e29e64-4501-4292-b803-57c9d6455585">
		<avio-logger:log doc:name="START" doc:id="fbcf2e0e-dc76-4133-81d2-3c5637d77783" config-ref="avioCoreConfig" message="Retriving TimeStamps Started"/>
		<os:retrieve doc:name="Set updateFrom" doc:id="0839e6e1-dbe7-46e3-8444-ec75a6c895f3" objectStore="dateWatermark" key="updateFrom" target="updateFrom" targetValue="#[output application/json --- payload]">
			<os:default-value><![CDATA[#[((now() >> "EST") as Date) - |P1D|
//"2022-10-17"]]]></os:default-value>
		</os:retrieve>
		<os:retrieve doc:name="Set updateTo" doc:id="f68e1c2c-dfe3-4fe1-aff4-8a164cd7eeab" objectStore="dateWatermark" key="updateTo" target="updateTo" targetValue="#[output application/json --- payload]">
			<os:default-value><![CDATA[#[(now() >> "EST") as Date
//"2022-10-18"]]]></os:default-value>
		</os:retrieve>
		<avio-logger:log doc:name="END" doc:id="e375f21f-f3ac-490c-bbab-ab69f57213c2" config-ref="avioCoreConfig" message="Retriving TimeStamps Completed" payload='#[write({updateFrom: vars.updateFrom,updateTo: vars.updateTo}, "application/json")]'/>
	</sub-flow>
	<sub-flow name="extract-and-sort-tables" doc:id="43e4b6ae-48b8-452a-8408-b589c3feb604">
		<ee:transform doc:name="Extract Config File Data" doc:id="a9bb67ca-d638-4a17-98a8-7ddeafc33d5b">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable resource="dataweave/config-file.dwl" variableName="configData" />
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Split Total Query Type with Others" doc:id="c9bdf340-e704-4c36-a486-e2d07342cc84">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable resource="dataweave/config-file-with-MinMaxAvg.dwl" variableName="configDataMinMaxAvg" />
				<ee:set-variable resource="dataweave/config-file-with-Total.dwl" variableName="configDataTotal" />
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Sort Table Names and Columns" doc:id="524f8ff0-8294-4728-8529-ceac27208952">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable resource="dataweave/list-of-min-max-avg-queries.dwl" variableName="listOfMaxMinAvgQueries" />
				<ee:set-variable resource="dataweave/list-of-total-columns-queries.dwl" variableName="listOfTotalQueries" />
			</ee:variables>
		</ee:transform>
		<ee:transform doc:name="Tables" doc:id="b4568059-08c5-4465-a9ff-860b173547b6" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="tablesTotal" ><![CDATA[%dw 2.0
output application/java
---
sizeOf(vars.listOfTotalQueries) as Number + sizeOf(vars.listOfMaxMinAvgQueries) as Number]]></ee:set-variable>
				<ee:set-variable variableName="errorTables" ><![CDATA[%dw 2.0
output application/json
---
[]]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
	</sub-flow>
	<sub-flow name="database-connections" doc:id="327cc97f-a407-441d-921e-8fae6e6b4f69" >
		<avio-logger:log doc:name="START" doc:id="14cb0332-fd30-41dd-87d8-3edccb1ab961" config-ref="avioCoreConfig" message='#["Start Data Pull from Table: " ++ vars.tableName default "Error: Table Not found"]' />
		<until-successful maxRetries="${retry.count}" doc:name="Until Successful" doc:id="0db76b0e-76fe-49e3-b1eb-981b5f7b4803" millisBetweenRetries="${retry.interval}">
					<try doc:name="Try" doc:id="56911859-8214-46be-99e9-c80b9418308a">
						<db:select doc:name="Extract Data from DB" doc:id="ae0ed6ae-e896-41d9-b083-7a84b6880959" config-ref="databaseConfig">
			<db:sql><![CDATA[#[payload]]]></db:sql>
		</db:select>
						<error-handler>
							<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="6f2113fd-130f-4745-8f7c-8868aff27dc6" type="DB:CONNECTIVITY">
						<avio-logger:log doc:name="ERROR" doc:id="e9e5ad63-42fe-4280-a610-581e7d3f7c67" config-ref="avioCoreConfig" message="connectivity error occured" level="ERROR"/>
							</on-error-propagate>
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="61fd6289-f7c7-403f-b937-5a662b315b10" type="ANY">
						<avio-logger:log doc:name="ERROR" doc:id="4e922b4c-5e2c-4258-a420-27b549fa7519" config-ref="avioCoreConfig" message="Permenant error occured" level="ERROR"/>
						<set-variable value="#[error.description]" doc:name="Set Error Msg" doc:id="17672cff-840f-4cf1-866c-9a0396b464f0" variableName="errorMsg"/>
						<set-variable value='#[{&#10;	"table": vars.tableName,&#10;	"error": vars.errorMsg default "Unknown error"&#10;}]' doc:name="Set Error Msg by Table" doc:id="ce60edde-85ea-4bb0-9181-3d115ba50e74" variableName="errorTables" />
					</on-error-continue>
						</error-handler>
					</try>
				</until-successful>
		<choice doc:name="Check for connectivity Errors?" doc:id="c6131529-1c87-4e47-8c9f-c949462dfa2e" >
			<when expression="#[not isEmpty(vars.errorMsg) == true]">
				<raise-error doc:name="Raise error" doc:id="0cb211b0-bfa3-431b-8e29-7fb2c56304c3" type="CUST:ERROR" description="#[vars.errorMsg]" />
			</when>
			<otherwise >
				<avio-logger:log doc:name="END" doc:id="05bc568f-6396-4b2c-9eb3-0cca0cb7158b" config-ref="avioCoreConfig" message='#["Completed Data Pull from Table: " ++ vars.tableName default "Error: Table Not found"]' />
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="smb-connections" doc:id="f4da3e68-b9f3-45cd-a71a-7d0a68ef9833" >
		<avio-logger:log doc:name="START" doc:id="e8cd6853-5752-481c-889a-d5c4e474e6de" config-ref="avioCoreConfig" message="Sending file to SMB Server location - MulesoftIMPfiles" />
		<set-variable value='#["mulesoft-op10-" ++ vars.updateFrom ++ "-" ++ now() as String {format: "y-MM-dd-hhms"} ++ ".imp"]' doc:name="Set File Name" doc:id="b06c1d7d-b5c6-419e-967a-f91efa41aec2" variableName="fileName"/>
		<smb:file-write doc:name="Operator10 SMB location" doc:id="946f4f2e-a287-4a98-897f-ed4f5136d7ef" config-ref="SMBConnectorConfig" fileName='#[vars.fileName]'/>
		<avio-logger:log doc:name="END" doc:id="e686b345-9486-4909-868f-cc84be37f30b" config-ref="avioCoreConfig" message="File successfully sent to SMBlocation - MulesoftIMPfiles"/>
	</sub-flow>
	<sub-flow name="op10-file-format" doc:id="22d208a7-3929-40f5-9dd9-4fb4bb6b9c21">
		<ee:transform doc:name="Op10 Output File" doc:id="ecc8360b-654a-4623-a164-a17ff9c719b8">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/csv separator="\t", header=false
---
(vars.minMaxAvgRecordsOutputFile default []) ++ (vars.totalRecordsOutputFile default [])]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<set-variable value="#[%dw 2.0&#10;output text/plain&#10;var content = write(payload, 'application/json', {indent:true})&#10;var size = sizeOf(content)/1024&#10;---&#10;size as String {format: '#.00'} ++ ' KB']" doc:name="Set File Size" doc:id="63d0a809-0e8d-4e20-928a-bcbae42c8bb3" variableName="bytesFile"/>
		<avio-logger:log doc:name="DEBUG" doc:id="6d35922f-e46f-4e1e-bca4-d7db41c1d0bf" config-ref="avioCoreConfig" payload='#[write(payload,"application/csv", {"header":false})]' message="Full Import file data for op10" />
	</sub-flow>
	<sub-flow name="op10-error-list" doc:id="0734b7f5-5938-4875-8e6c-b8cdce101b17">
		<ee:transform doc:name="op10 Error List" doc:id="5f85afd4-897f-427d-9d69-5bf151754386">
			<ee:message>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="fullErrorResponse"><![CDATA[%dw 2.0
output application/json
---
(vars.minMaxAvgErrorResponse default []) ++ (vars.totalRecordsErrorResponse default [])]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="If Errors exists?" doc:id="67a7ec74-f470-4a21-8186-00a82eff9bf8" >
			<when expression="#[sizeOf(vars.fullErrorResponse) != 0]">
				<avio-logger:log doc:name="ERROR" doc:id="bc0267fe-0a48-4745-aaab-8132f939144d" config-ref="avioCoreConfig" level="ERROR" payload='#[write(vars.fullErrorResponse,"application/json")]' message="Full Error List of Op10 Processing" />
			</when>
			<otherwise >
				<avio-logger:log doc:name="INFO" doc:id="dfb7ce2c-ed51-408b-b38b-7b0b4ec7a5b0" config-ref="avioCoreConfig" message="No errors found to log"/>
			</otherwise>
		</choice>
	</sub-flow>
	<flow name="extract-min-max-avg-records" doc:id="8041a6dc-d43b-4170-b111-81fd89d9982f">
		<avio-logger:log doc:name="START" doc:id="5955d35e-7d50-4615-ad45-c41d81459a00" config-ref="avioCoreConfig" message="Starting to Process Min, Max and Avg Records" />
		<parallel-foreach doc:name="Parallel For Each" doc:id="64cbc375-7b62-49a0-80e7-f6ec2326eb19" collection="#[vars.listOfMaxMinAvgQueries]" maxConcurrency="${max.concurrency}">
			<try doc:name="Try" doc:id="030236c4-d63c-41f7-8138-7857e87d2d86">
				<set-variable value="#[payload.tableName]" doc:name="Set Table Name" doc:id="6144951b-6fce-4a14-9327-fec785b0e9f8" variableName="tableName" />
				<ee:transform doc:name="Construct Query" doc:id="a3e80b58-9ffa-4b1d-a769-6a28ba11052c">
				<ee:message>
						<ee:set-payload resource="dataweave/construct-queries-for-MinMaxAvg.dwl" />
				
</ee:message>
			</ee:transform>
				<flow-ref doc:name="database-connections" doc:id="36dc74b2-d105-4c09-bf17-ef97e7f9a06e" name="database-connections" />
				<ee:transform doc:name="Validate DB Response" doc:id="1b975cd3-cf3b-4baf-98db-298a74f8d18b">
			<ee:message>
						<ee:set-payload resource="dataweave/db-response-skipnulls.dwl" />
			
</ee:message>
		</ee:transform>
				<choice doc:name="Check if DB Response is Empty?" doc:id="ae8ef160-0148-43bd-9f22-312b1df1ad83">
				<when expression="#[isEmpty(payload[0]) == false]">
					<ee:transform doc:name="Create OP10 File as JSON" doc:id="98a34054-346a-4973-ac39-1b1640c75e1c">
						<ee:message>
								<ee:set-payload resource="dataweave/create-OP10-file-as-json-MinMaxAvg.dwl" />
						
</ee:message>
					</ee:transform>
					<ee:transform doc:name="Trim Avgs" doc:id="4e8c87ae-5f2f-4e56-a951-684b947ccfe2">
						<ee:message>
								<ee:set-payload resource="dataweave/trim-avgs.dwl" />
						</ee:message>
					</ee:transform>
				
</when>
				<otherwise>
						<avio-logger:log doc:name="INFO" doc:id="8877864e-3eea-4eb9-b137-c2b808df2811" config-ref="avioCoreConfig" message='#["Database Response is null for table: " ++ vars.tableName default ""]' />
				
</otherwise>
			</choice>
				<error-handler>
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="811c34d7-5ca2-43f8-9dd9-984dc9567b5f" type="ANY">
						<avio-logger:log doc:name="ERROR" doc:id="7dd8307a-3c59-4ce8-a50e-1e06ee75681f" config-ref="avioCoreConfig" message='#["failed to process the table: " ++ vars.tableName default ""]' level="ERROR" />
						<ee:transform doc:name="errorPayload" doc:id="d7c426f4-c677-472c-8635-32386ce09a57">
							<ee:message>
								<ee:set-payload resource="dataweave/for-each-error-payload.dwl" />
							</ee:message>
							<ee:variables>
							</ee:variables>
						</ee:transform>
						<avio-logger:log doc:name="ERROR" doc:id="c96c3893-2762-43a9-829f-6505385327cf" config-ref="avioCoreConfig" message="Error Payload for failed data pull - Moving to next Iteration" payload='#[write(vars.errorPayload,"application/json")]' level="ERROR" />
					</on-error-continue>
				</error-handler>
			</try>
		</parallel-foreach>
		<ee:transform doc:name="Create OP10 File Data" doc:id="4aafbf34-2c0d-4b92-a5ed-26b24e1eee23">
						<ee:message>
						</ee:message>
			<ee:variables>
				<ee:set-variable resource="dataweave/min-max-avg-records-output-file.dwl" variableName="minMaxAvgRecordsOutputFile" />
				<ee:set-variable resource="dataweave/min-max-avg-error-response.dwl" variableName="minMaxAvgErrorResponse" />
			</ee:variables>
					
</ee:transform>
		<avio-logger:log doc:name="SUCCESS" doc:id="312da931-26b3-414f-9e2f-b29fb0cd0d44" config-ref="avioCoreConfig" message="List of MinMaxAvg records success response" payload='#[write(vars.minMaxAvgRecordsOutputFile,"application/csv", {"header":false})]' />
		<avio-logger:log doc:name="ERROR" doc:id="e39d0f9d-825b-4136-a7ef-d375ea333266" config-ref="avioCoreConfig" message="List of MinMaxAvg records error response" payload='#[write(vars.minMaxAvgErrorResponse,"application/json")]'/>
		<avio-logger:log doc:name="END" doc:id="d95296e5-b978-4252-aca9-ba3db774e022" config-ref="avioCoreConfig" message="Min, Max and Avg records processing completed" />
	
</flow>
	<flow name="extract-total-records" doc:id="7153c652-ad89-422d-aa9d-421648aa0909" >
		<avio-logger:log doc:name="START" doc:id="27d51302-0070-42f3-b904-77a784baf321" config-ref="avioCoreConfig" message="Starting to Process Total Valued Records" />
		<parallel-foreach doc:name="Parallel For Each" doc:id="22b11aa6-91db-413d-8ee0-5f330f98d903" collection="#[vars.listOfTotalQueries]" maxConcurrency="${max.concurrency}">
			<try doc:name="Try" doc:id="96bf354f-f6bc-442f-a296-3ddf5a97baf2" >
				<set-variable value="#[payload.tableName]" doc:name="Set Table Name" doc:id="16b485e5-2282-4a61-a067-15a316ccf6c9" variableName="tableName" />
				<ee:transform doc:name="Construct Query" doc:id="d2177698-5c86-4544-8ed7-07e2d6ec92a3">
				<ee:message>
						<ee:set-payload resource="dataweave/construct-queries-for-total-columns.dwl" />
				</ee:message>
			</ee:transform>
				<flow-ref doc:name="database-connections" doc:id="d131f1c4-d23b-4cb9-8701-8f82849b452a" name="database-connections"/>
				<ee:transform doc:name="Validate DB Response" doc:id="d7c29c96-58c4-4478-a162-9a0a58032188">
			<ee:message>
						<ee:set-payload resource="dataweave/db-response-skipnulls.dwl" />

			</ee:message>
		</ee:transform>
				<choice doc:name="Check if DB Response is Empty?" doc:id="839c9f04-24d8-47d0-8db8-3a415202a8fd">
				<when expression="#[isEmpty(payload) == false]">
					<ee:transform doc:name="Filter Yesterday and Today record" doc:id="a5136984-ddc3-4f03-8486-909a49118aab">
						<ee:message>
								<ee:set-payload resource="dataweave/filter-yesterday-and-today-records.dwl" />
						</ee:message>
					</ee:transform>
					<ee:transform doc:name="Create OP10 File as JSON" doc:id="44052efe-e1d9-455d-8509-2c75cd5cbdcb">
						<ee:message>
								<ee:set-payload resource="dataweave/create-OP10-file-as-json-Total.dwl" />
						</ee:message>
					</ee:transform>
				</when>
				<otherwise>
						<avio-logger:log doc:name="INFO" doc:id="b2ef6e49-2c87-4f1e-bb3d-e3371a169f9f" config-ref="avioCoreConfig" message='#["Database Response is null for table: " ++ vars.tableName default ""]'/>
				</otherwise>
			</choice>
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="db1ae4a5-1db0-4c96-80f5-c3cebec93d6e" type="ANY" >
						<avio-logger:log doc:name="ERROR" doc:id="aa86708e-8eb4-4142-bff8-0933f34a894d" config-ref="avioCoreConfig" message='#["failed to process the table: " ++ vars.tableName default ""]' level="ERROR" />
						<ee:transform doc:name="errorPayload" doc:id="97d85005-060e-4e55-967d-f8b0c7e37ecc" >
							<ee:message >
								<ee:set-payload resource="dataweave/for-each-error-payload.dwl" />
							</ee:message>
							<ee:variables />
						</ee:transform>
						<avio-logger:log doc:name="ERROR" doc:id="b6c98fec-6aec-49c7-9c33-e5348ff0fed8" config-ref="avioCoreConfig" message="Error Payload for failed data pull - Moving to next Iteration" payload='#[write(vars.errorPayload,"application/json")]' level="ERROR" />
					</on-error-continue>
				</error-handler>
			</try>
		</parallel-foreach>
		<ee:transform doc:name="Create OP10 File Data" doc:id="3b3b1d47-a05f-4dd2-9f01-21fcc31d3102">
						<ee:message>
						</ee:message>
			<ee:variables >
				<ee:set-variable resource="dataweave/total-records-output-file.dwl" variableName="totalRecordsOutputFile" />
				<ee:set-variable resource="dataweave/total-records-error-response.dwl" variableName="totalRecordsErrorResponse" />
			</ee:variables>
					</ee:transform>
		<avio-logger:log doc:name="SUCCESS" doc:id="e677ef59-4fd4-42dc-945e-97599ff04702" config-ref="avioCoreConfig" message="List of Total Records success Response" payload='#[write(vars.totalRecordsOutputFile,"application/csv", {"header":false})]'/>
		<avio-logger:log doc:name="ERROR" doc:id="a1f73e49-359c-4bdd-af9f-4186ebf5bf25" config-ref="avioCoreConfig" payload='#[write(vars.totalRecordsErrorResponse,"application/json")]' message="List of Total Records Error Response"/>
		<avio-logger:log doc:name="END" doc:id="b7482b82-8055-4241-9445-33bdc70bb533" config-ref="avioCoreConfig" message="Total Valued Records processing completed"/>
	</flow>
	<sub-flow name="errors-report-sending" doc:id="dd7ec915-a331-459d-bd54-61cdedd235ca" >
		<ee:transform doc:name="Transform Message" doc:id="221be2ed-7d3f-4be1-8587-1590cfccde48" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
if(vars.minMaxAvgErrorResponse == null and vars.totalRecordsErrorResponse == null)
"{
	SUCCESS: OP-10 processing successfully completed,
	Summary: {
		Total Tables: " ++ vars.tablesTotal ++ ",
		UpdateFrom: " ++ vars.updateFrom ++ ",
		UpdateTo: " ++ vars.updateTo ++ ",
		StartTime: " ++ vars.startTime ++ ",
		EndTime: " ++ vars.endTime ++ ",
	},
	File Details: {
		Name: " ++ vars.fileName ++ ",
		Rows: " ++ vars.recordsTotal ++ ",
		Size: " ++ vars.bytesFile ++ "
	}
}"
else
"{
	ERROR: OP-10 processing failed,
	Summary: {
		Total Tables: " ++ vars.tablesTotal ++ ",
		Total Errors: " ++ vars.errorsTotal ++ ",
		UpdateFrom: " ++ vars.updateFrom ++ ",
		UpdateTo: " ++ vars.updateTo ++ ",
		StartTime: " ++ vars.startTime ++ ",
		EndTime: " ++ vars.endTime ++ ",
	}
	Tables With Errors: " ++ vars.errorTables.table map ($) joinBy "," ++ ",
	File Details: {
		Name: " ++ vars.fileName ++ ",
		Rows: " ++ vars.recordsTotal ++ ",
		Size: " ++ vars.bytesFile ++ "
	},
	Details: {
		" ++ vars.errorTables ++ "
	}
}"]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<avio-logger:log doc:name="Log" doc:id="cb26e33a-b8bc-4725-aab1-4146d8b9dd4e" config-ref="avioCoreConfig" message="Processing final report" payload='#[write(payload,"application/json")]'/>
		<ee:transform doc:name="HTLM body to send email" doc:id="e7599884-8112-4469-9313-23666a93d0d8" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output text/plain
---
if(vars.minMaxAvgErrorResponse == null and vars.totalRecordsErrorResponse == null)
"<html>
	<body>
	<br>
	<br>
	<h1>SUCCESS: OP-10 processing successfully completed</h1>
	<br>
	<h3>Summary</h3>
	<br>
	<p><b>Total Tables</b>" ++ vars.tablesTotal ++ "</p>
	<table border=" ++ 1 ++ ">
		<tr>
			<td><b>Update From</b></td>
			<td>" ++ vars.updateFrom ++ "</td>
			<td><b>Update To</b></td>
			<td>" ++ vars.updateTo ++ "</td>
		</tr>
		<tr>
			<td><b>Start Time</b></td>
			<td>" ++ vars.startTime ++ "</td>
			<td><b>End Time</b></td>
			<td>" ++ vars.endTime ++ "</td>
		</tr>
	</table>
	<br>
	<h3>File Details</h4>
	<br>
	<table border=" ++ 1 ++ ">
		<tr>
			<td><b>Name</b></td>
			<td>" ++ vars.fileName ++ "</td>
		</tr>
		<tr>
			<td><b>Rows</b></td>
			<td>" ++ vars.recordsTotal ++ "</td>
		</tr>
		<tr>
			<td><b>Size</b></td>
			<td>" ++ vars.bytesFile ++ "</td>
		</tr>
	</table>
</body>
</html>"
else
"<html>
	<body>
	<br>
	<br>
	<h1>ERROR: OP-10 processing failed</h1>
	<br>
	<h3>Summary</h3>
	<br>
	<table border=" ++ 1 ++ ">
		<tr>
			<td><b>Total Tables</b></td>
			<td>" ++ vars.tablesTotal ++ "</td>
			<td><b>Total Errors</b></td>
			<td>" ++ vars.errorsTotal ++ "</td>
		</tr>
		<tr>
			<td><b>Update From</b></td>
			<td>" ++ vars.updateFrom ++ "</td>
			<td><b>Update To</b></td>
			<td>" ++ vars.updateTo ++ "</td>
		</tr>
		<tr>
			<td><b>Start Time</b></td>
			<td>" ++ vars.startTime ++ "</td>
			<td><b>End Time</b></td>
			<td>" ++ vars.endTime ++ "</td>
		</tr>
	</table>
	<br>
	<h4>Tables With Error</h4>
	<p>" ++ vars.errorTables.table map ($) joinBy "," ++ "</p>
	<br>
	<h3>File Details</h4>
	<br>
	<table border=" ++ 1 ++ ">
		<tr>
			<td><b>Name</b></td>
			<td>" ++ vars.fileName ++ "</td>
		</tr>
		<tr>
			<td><b>Rows</b></td>
			<td>" ++ vars.recordsTotal ++ "</td>
		</tr>
		<tr>
			<td><b>Size</b></td>
			<td>" ++ vars.bytesFile ++ "</td>
		</tr>
	</table>
	<br>
	<h3>Details</h3>
	<br>
	<table border="++ 1 ++">
		<tr>
			<td><b>Table</b></td>
			<td><b>Error</b></td>
		</tr>
		" ++ (payload map (tx, index) -> "<tr><td>" ++ tx.table ++ "</td>" ++ "<td>" ++ tx.error ++ "</td></tr>") joinBy "" ++ "
	</table>
</body>
</html>"]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>

</mule>